
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: servicelevelobjectives.athene.metalmatze.de
spec:
  group: athene.metalmatze.de
  names:
    kind: ServiceLevelObjective
    listKind: ServiceLevelObjectiveList
    plural: servicelevelobjectives
    singular: servicelevelobjective
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ServiceLevelObjective is the Schema for the ServiceLevelObjectives
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ServiceLevelObjectiveSpec defines the desired state of ServiceLevelObjective
          properties:
            latency:
              description: 'Latency target for the service. Combined with the Target
                this is used to define things like: 99% of the requests need to be
                served within 5s.'
              type: string
            serviceLevelIndicator:
              description: ServiceLevelIndicator is the underlying data source that
                indicates how the service is doing. This will be a Prometheus metric
                with specific selectors for your service.
              properties:
                grpc:
                  properties:
                    method:
                      description: Method is a selector to which gRPC service's method
                        this indicator refers to.
                      type: string
                    metric:
                      description: Metric to use. Defaults to grpc_server_handled_total
                        without latency or grpc_server_handling_seconds_bucket if
                        latency is specified.
                      type: string
                    selectors:
                      description: Selectors are free form PromQL selectors for that
                        specific service.
                      items:
                        type: string
                      type: array
                    service:
                      description: Service is a selector to which gRPC service this
                        indicator refers to.
                      type: string
                  required:
                  - method
                  - selectors
                  - service
                  type: object
                http:
                  properties:
                    errorSelectors:
                      description: ErrorSelectors are free form PromQL selectors that
                        specify what time series should be uses as error counters.
                        Defaults to code=~"5.." selecting all HTTP 5xx responses as
                        errors.
                      items:
                        type: string
                      type: array
                    metric:
                      description: Metric to use. Defaults to http_requests_total
                        without latency or http_request_duration_seconds_bucket if
                        latency is specified.
                      type: string
                    selectors:
                      description: Selectors are free form PromQL selectors for that
                        specific service.
                      items:
                        type: string
                      type: array
                  type: object
              type: object
            target:
              description: 'Target is a string that''s casted to a float64 between
                0 - 100. It represents the desired availability of the service in
                the given window. float64 are not supported: https://github.com/kubernetes-sigs/controller-tools/issues/245'
              type: string
            window:
              description: Window within which the Target is supposed to be kept.
                Usually something like 1d, 7d or 28d.
              type: string
          required:
          - serviceLevelIndicator
          - target
          - window
          type: object
        status:
          description: ServiceLevelObjectiveStatus defines the observed state of ServiceLevelObjective
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
